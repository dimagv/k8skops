# https://github.com/coreos/prometheus-operator/blob/master/helm/kube-prometheus/values.yaml

global:
  pspEnable: false

alertmanager:
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by:
      - job
      group_interval: 5m
      group_wait: 30s
      repeat_interval: 12h
      receiver: slack
      routes:
      - match:
          alertname: DeadMansSwitch
        receiver: slack
    receivers:
    - name: slack
      slack_configs:
      - send_resolved: true
        api_url: {{ALERTMANAGER_SLACK_API_URL}}
        channel: {{ALERTMANAGER_SLACK_CHANNEL}}
        username: {{ALERTMANAGER_SLACK_USERNAME}}
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/auth-signin: https://oauth2.{{DNS_ZONE}}/oauth2/start?rd=https://$host$request_uri$is_args$args
      nginx.ingress.kubernetes.io/auth-url: https://oauth2.{{DNS_ZONE}}/oauth2/auth
    hosts: ['alertmanager.{{DNS_ZONE}}']
    tls:
      - secretName: alertmanager-tls
        hosts:
          - alertmanager.{{DNS_ZONE}}
  storageSpec:
    volumeClaimTemplate:
      spec:
        storageClassName: gp2-resize
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 25Gi
prometheus:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/auth-signin: https://oauth2.{{DNS_ZONE}}/oauth2/start?rd=https://$host$request_uri$is_args$args
      nginx.ingress.kubernetes.io/auth-url: https://oauth2.{{DNS_ZONE}}/oauth2/auth
    hosts: ['prometheus.{{DNS_ZONE}}']
    tls:
      - secretName: prometheus-tls
        hosts:
          - prometheus.{{DNS_ZONE}}
  storageSpec:
    volumeClaimTemplate:
      spec:
        storageClassName: gp2-resize
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 50Gi
  additionalScrapeConfigs:
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
    - role: pod
    relabel_configs:
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
      action: keep
      regex: true
    - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
      action: replace
      target_label: __metrics_path__
      regex: (.+)
    - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
      action: replace
      regex: ([^:]+)(?::\d+)?;(\d+)
      replacement: $1:$2
      target_label: __address__
    - action: labelmap
      regex: __meta_kubernetes_pod_label_(.+)
    - source_labels: [__meta_kubernetes_namespace]
      action: replace
      target_label: kubernetes_namespace
    - source_labels: [__meta_kubernetes_pod_name]
      action: replace
      target_label: kubernetes_pod_name
grafana:
  auth:
    anonymous:
      enabled: true
  adminUser: {{GRAFANA_ADMIN_USER}}
  adminPassword: {{GRAFANA_ADMIN_PASSWORD}}
  storageSpec:
    class: gp2-resize
    accessMode: "ReadWriteOnce"
    resources:
      requests:
        storage: 25Gi
  ingress:
    enabled: true
    hosts: ['grafana.{{DNS_ZONE}}']
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/auth-signin: https://oauth2.{{DNS_ZONE}}/oauth2/start?rd=https://$host$request_uri$is_args$args
      nginx.ingress.kubernetes.io/auth-url: https://oauth2.{{DNS_ZONE}}/oauth2/auth
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.{{DNS_ZONE}}